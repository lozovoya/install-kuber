---
- name: Install nodes
  hosts: all
  remote_user: "{{ user }}"
  gather_facts: true
  tasks:
    - name: Create containerd config
      become: true
      ansible.builtin.file:
        path: "/etc/modules-load.d/containerd.conf"
        state: touch
    - name: add overlay to containerd.conf
      become: true
      ansible.builtin.lineinfile:
        path: "/etc/modules-load.d/containerd.conf"
        regexp: "overlay"
        line: "overlay"
        state: present
    - name: add br_netfilter to containerd.conf
      become: true
      ansible.builtin.lineinfile:
        path: "/etc/modules-load.d/containerd.conf"
        regexp: "br_netfilter"
        line: "br_netfilter"
        state: present
    - name: turn on overlay and br_netfilter
      become: true
      ansible.builtin.shell:
        cmd: "modprobe overlay && modprobe br_netfilter"
    - name: Create kubernetes-k8s config
      become: true
      ansible.builtin.file:
        path: "/etc/sysctl.d/99-kubernetes-k8s.conf"
        state: touch
    - name: add bridge-nf-call-iptables
      become: true
      ansible.builtin.lineinfile:
        path: "/etc/sysctl.d/99-kubernetes-k8s.conf"
        regexp: "net.bridge.bridge-nf-call-iptables = 1"
        line: "net.bridge.bridge-nf-call-iptables = 1"
        state: present
    - name: add ipv4.ip_forward
      become: true
      ansible.builtin.lineinfile:
        path: "/etc/sysctl.d/99-kubernetes-k8s.conf"
        regexp: "net.ipv4.ip_forward = 1"
        line: "net.ipv4.ip_forward = 1"
        state: present
    - name: add bridge-nf-call-ip6tables
      become: true
      ansible.builtin.lineinfile:
        path: "/etc/sysctl.d/99-kubernetes-k8s.conf"
        regexp: "net.bridge.bridge-nf-call-ip6tables = 1"
        line: "net.bridge.bridge-nf-call-ip6tables = 1"
        state: present
    - name: reload system parameters
      become: true
      ansible.builtin.shell:
        cmd: "sysctl --system"
    - name: Install containerd
      become: true
      ansible.builtin.apt:
        name:
          - containerd
        state: present
    - name: load default containerd config
      become: true
      ansible.builtin.shell:
        cmd: "containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1"
    - name: Set cgroupdriver to systemd
      become: true
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        insertafter: '.*\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]$'
        line: '            SystemdCgroup = true'
        state: present
    - name: Restart containerd
      become: true
      ansible.builtin.systemd:
        name: containerd
        state: restarted
    - name: Enable containerd
      become: true
      ansible.builtin.systemd:
        name: containerd
        enabled: yes
    - name: Install packages
      become: true
      ansible.builtin.apt:
        name:
          - gnupg
          - gnupg2
          - curl
          - software-properties-common
          - bash-completion
          - nfs-kernel-server
          - jq
        state: present
    - name: install helm
      ansible.builtin.shell:
        cmd: "curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash"
    - name: add helm repo
      ansible.builtin.shell:
        cmd: "helm repo add stable https://charts.helm.sh/stable && helm repo update"
    - name: Add repo key
      become: true
      ansible.builtin.shell:
        cmd: "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/cgoogle.gpg"
        creates: "/etc/apt/trusted.gpg.d/cgoogle.gpg"
    - name: Add repo
      become: true
      ansible.builtin.shell:
        cmd: 'apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"'
    - name: Apt update
      become: true
      ansible.builtin.apt:
        update_cache: yes
    - name: Install kubernetes
      become: true
      ansible.builtin.apt:
        name:
          - kubelet=1.25.5-00
          - kubeadm=1.25.5-00
          - kubectl
        state: present
    - name: Hold packages
      become: true
      ansible.builtin.shell:
        cmd: "apt-mark hold kubelet kubeadm kubectl"




